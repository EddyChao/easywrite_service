name: Docker Build and Push
# DOCKER_USERNAME
# DOCKER_PASSWORD
# DOCKER_REGISTRY_URL

on:
  push:
    tags:
      - "*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Sanitize Registry URL (remove protocol if present)
        env:
          REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
        run: |
          # Remove protocol if it's present (https:// or http://)
          SANITIZED_REGISTRY_URL=${REGISTRY_URL}
          if [[ "$REGISTRY_URL" == https://* ]]; then
            SANITIZED_REGISTRY_URL=${REGISTRY_URL#https://}
          elif [[ "$REGISTRY_URL" == http://* ]]; then
            SANITIZED_REGISTRY_URL=${REGISTRY_URL#http://}
          fi
          echo "SANITIZED_REGISTRY_URL=$SANITIZED_REGISTRY_URL" >> $GITHUB_ENV  # Save it to GITHUB_ENV so it's available in the next steps

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${SANITIZED_REGISTRY_URL}  # Use sanitized URL for registry login
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Git Tag
        id: get_tag
        run: echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build and Push Docker image with version tag and latest
        run: |
          # Build and push the image with the tag from Git tag and also as latest
          docker buildx build --platform linux/amd64 \
            -t ${SANITIZED_REGISTRY_URL}/easywrite-service:$TAG \
            -t ${SANITIZED_REGISTRY_URL}/easywrite-service:latest \
            --push -f docker/Dockerfile .
